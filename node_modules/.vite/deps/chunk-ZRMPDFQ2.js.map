{
  "version": 3,
  "sources": ["../../lucide-react/src/defaultAttributes.ts", "../../lucide-react/src/createLucideIcon.ts"],
  "sourcesContent": ["export default {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n};\n", "import { forwardRef, createElement, ReactSVG, SVGProps, ForwardRefExoticComponent, RefAttributes } from 'react';\nimport defaultAttributes from './defaultAttributes';\n\nexport type IconNode = [elementName: keyof ReactSVG, attrs: Record<string, string>][]\n\nexport type SVGAttributes = Partial<SVGProps<SVGSVGElement>>\n\nexport interface LucideProps extends SVGAttributes {\n  size?: string | number\n  absoluteStrokeWidth?: boolean\n}\n\nexport type LucideIcon = ForwardRefExoticComponent<LucideProps & RefAttributes<SVGSVGElement>>\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) => string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\nconst createLucideIcon = (iconName: string, iconNode: IconNode): LucideIcon => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(\n    ({ color = 'currentColor', size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: `lucide lucide-${toKebabCase(iconName)}`,\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(\n            (Array.isArray(children) ? children : [children]) || []\n          )\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconName}`;\n\n  return Component;\n};\n\nexport default createLucideIcon\n"],
  "mappings": ";;;;;;;;;AAAA,IAAe,oBAAA;EACb,OAAO;EACP,OAAO;EACP,QAAQ;EACR,SAAS;EACT,MAAM;EACN,QAAQ;EACR,aAAa;EACb,eAAe;EACf,gBAAgB;AAClB;;;ACWa,IAAA,cAAc,CAAC,WAAmB,OAAO,QAAQ,sBAAsB,OAAO,EAAE,YAAY;AAEnG,IAAA,mBAAmB,CAAC,UAAkB,aAAmC;AAC7E,QAAM,gBAAY;IAChB,CAAC,EAAE,QAAQ,gBAAgB,OAAO,IAAI,cAAc,GAAG,qBAAqB,UAAA,GAAa,KAAK,GAAG,YAC/F;MACE;MACA;QACE;QACA,GAAG;QACH,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,aAAa,sBAAsB,OAAO,WAAW,IAAI,KAAK,OAAO,IAAI,IAAI;QAC7E,WAAW,iBAAiB,YAAY,QAAQ,CAAA;QAChD,GAAG;MACL;MACA;QACE,GAAG,SAAS,IAAI,CAAC,CAAC,KAAK,KAAK,UAAM,4BAAc,KAAK,KAAK,CAAC;QAC3D,IACG,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ,MAAM,CAAC;MAE1D;IACF;EAAA;AAGJ,YAAU,cAAc,GAAG,QAAA;AAEpB,SAAA;AACT;",
  "names": []
}
